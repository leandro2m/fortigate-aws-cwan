Content-Type: multipart/mixed; boundary="==AWS=="
MIME-Version: 1.0

--==AWS==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0

config system global
set hostname FortiGate-${region}
set admintimeout 120
end
config system dns
set primary 169.254.169.253
end
config system interface
edit port1
set alias public
set mode static
set ip ${port1_ip} ${port1_mask}
set allowaccess ping https ssh fgfm
set mtu-override enable
set mtu 9001
next
edit port2
set alias private
set mode static
set ip ${port2_ip} ${port2_mask}
set allowaccess ping https ssh fgfm probe-response
set mtu-override enable
set mtu 9001
next
end
config system geneve
    edit "aws-az1"
        set interface "port2"
        set type ppp
        set remote-ip ${gwlbe_az1}
    next
    edit "aws-az2"
        set interface "port2"
        set type ppp
        set remote-ip ${gwlbe_az2}
    next
end
config system zone
    edit "aws-geneve"
        set intrazone allow
        set interface "aws-az1" "aws-az2"
    next
end
config router static
    edit 1
        set gateway ${port1_gw}
        set device "port1"
    next
    edit 2
        set dst 10.0.0.0 255.0.0.0
        set device "aws-az1"
    next
    edit 3
        set dst 10.0.0.0 255.0.0.0
        set device "aws-az2"
    next
    edit 4
        set dst 10.0.0.0 255.0.0.0
        set gateway ${port2_gw}
        set device "port2"
    next
end
config router policy
    edit 1
        set input-device "aws-az1"
        set src "0.0.0.0/0.0.0.0"
        set dst "0.0.0.0/0.0.0.0"
        set output-device "aws-az1"
    next
    edit 2
        set input-device "aws-az2"
        set src "0.0.0.0/0.0.0.0"
        set dst "0.0.0.0/0.0.0.0"
        set output-device "aws-az2"
    next
end
config system sdn-connector
edit aws-ha
set type aws
set use-metadata-iam enable
next
end
config firewall policy
    edit 1
        set name "aws-geneve"
        set srcintf "aws-geneve"
        set dstintf "aws-geneve"
        set action accept
        set srcaddr "all"
        set dstaddr "all"
        set schedule "always"
        set service "ALL"
        set logtraffic all
    next
end

%{ if type == "byol" }
--==AWS==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="license"

%{ if format == "token" } LICENSE-TOKEN:${chomp(file(license_file))} INTERVAL:4 COUNT:4 %{ endif }
%{ if format == "file" } ${file(license_file)} %{ endif }

%{ endif }
--==AWS==--